name: resctrl-checker--test-ec2
on: workflow_dispatch

# Add permissions needed for OIDC authentication
permissions:
  id-token: write # Required for requesting the JWT

jobs:
  setup-runner:
    name: Start EC2 runner
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
    outputs:
      runner-label: ${{ steps.start-runner.outputs.runner-label }}
      ec2-instance-id: ${{ steps.start-runner.outputs.ec2-instance-id }}
      region: ${{ steps.start-runner.outputs.region }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Start AWS Runner
        id: start-runner
        uses: ./.github/actions/aws-runner
        with:
          github-token: ${{ secrets.REPO_ADMIN_TOKEN }}
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          instance-type: 'm7i.metal-24xl'
          image-type: 'ubuntu-22.04'
          pre-runner-script: |
            sudo yum update -y && \
            sudo yum install docker git libicu -y
            sudo systemctl enable docker

  do-job:
    needs: setup-runner
    runs-on: ${{ needs.setup-runner.outputs.runner-label }}
    steps:
      - name: Test runner
        run: |
          echo "Hello from EC2 runner!"
      - name: Create home directory
        run: |
          mkdir -p /home/runner
          echo "HOME=/home/runner" >> $GITHUB_ENV
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: feature/#9-resctrl_support_checker
      - name: Install `go`
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.9"
      - name: Change directory to pkg/checker
        run: | 
          cd pkg/checker
          pwd
          go mod tidy
          go build main.go
          go run main.go

  cleanup-runner:
    name: Stop EC2 runner
    needs: [setup-runner, do-job]
    runs-on: ubuntu-latest
    if: always()  # Run even if previous jobs fail
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Stop AWS Runner
        uses: ./.github/actions/aws-runner/cleanup
        with:
          runner-label: ${{ needs.setup-runner.outputs.runner-label }}
          ec2-instance-id: ${{ needs.setup-runner.outputs.ec2-instance-id }}
          github-token: ${{ secrets.REPO_ADMIN_TOKEN }}
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ needs.setup-runner.outputs.region || secrets.AWS_REGION }}

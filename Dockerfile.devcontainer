FROM ubuntu:latest

# Avoid prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Add amd64 architecture
RUN dpkg --add-architecture amd64

# Set up repositories for both arm64 and amd64
RUN echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble main restricted universe multiverse\n\
deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-updates main restricted universe multiverse\n\
deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-backports main restricted universe multiverse\n\
deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-security main restricted universe multiverse\n\
deb [arch=amd64] http://archive.ubuntu.com/ubuntu noble main restricted universe multiverse\n\
deb [arch=amd64] http://archive.ubuntu.com/ubuntu noble-updates main restricted universe multiverse\n\
deb [arch=amd64] http://archive.ubuntu.com/ubuntu noble-backports main restricted universe multiverse\n\
deb [arch=amd64] http://security.ubuntu.com/ubuntu noble-security main restricted universe multiverse" > /etc/apt/sources.list

RUN rm /etc/apt/sources.list.d/ubuntu.sources

# Packages required for cilium/ebpf development
ENV EBPF_PACKAGES="golang-go llvm clang libbpf-dev"

# Update and install essential build tools and kernel headers
RUN apt-get update && apt-get install -y \
    build-essential \
    crossbuild-essential-amd64 \
    linux-headers-6.8.0-52-generic:amd64 \
    linux-image-6.8.0-52-generic:amd64 \
    linux-tools-6.8.0-52-generic:amd64 \
    git \
    vim \
    curl \
    kmod \
    r-base \
    ${EBPF_PACKAGES} \
    && rm -rf /var/lib/apt/lists/*

# For Go development
RUN go install -v golang.org/x/tools/gopls@latest

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

# Create architecture-specific symlink for asm
RUN arch=$(uname -m) && \
    case ${arch} in \
        aarch64) ln -sf /usr/include/aarch64-linux-gnu/asm /usr/include/asm ;; \
        x86_64)  ln -sf /usr/include/x86_64-linux-gnu/asm /usr/include/asm ;; \
        *)       echo "Unsupported architecture: ${arch}" && exit 1 ;; \
    esac

# Expose bpftool by symlinking "ln -s 6.8.0-52-generic `uname -r`" in /usr/lib/linux-tools
RUN ln -s /usr/lib/linux-tools/6.8.0-52-generic /usr/lib/linux-tools/`uname -r`

# Set the working directory
WORKDIR /workspace

# Keep container running
CMD ["sleep", "infinity"]